{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-69dd30b86957af73.js","src/Tamagotchi.ts","node_modules/@parcel/runtime-js/lib/runtime-b53b7a68abd7ee8f.js","src/main.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5YTGu\\\":\\\"index.4724a392.js\\\",\\\"jMyWs\\\":\\\"skull.7f32e062.png\\\"}\"));","interface Animal {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport default class Tamagotchi {\r\n  private happy: number;\r\n  private hungry: number;\r\n  private readonly type: Animal[];\r\n  private hungerTimer: number;\r\n  private happyTimer: number;\r\n  private isAlive: boolean;\r\n  private readonly startOfGame: number;\r\n  private isPoopGone: boolean;\r\n  private lastFeed: number;\r\n  private lastPlay: number;\r\n\r\n  constructor() {\r\n    this.happy = 5;\r\n    this.hungry = 5;\r\n    this.type = [\r\n      { name: 'chichi', type: 'sheep' },\r\n      { name: 'chobitchi', type: 'chinchilla' },\r\n      { name: 'doremitchi', type: 'chinchilla' },\r\n      { name: 'doyakentchi', type: 'dog' },\r\n      { name: 'furi', type: 'octopus' },\r\n      { name: 'hanatarezotchi', type: 'teapot' },\r\n      { name: 'kizunatchi', type: 'cat' },\r\n      { name: 'makimo', type: 'hermitcrab' },\r\n      { name: 'onsenmoguratchi', type: 'groundhog' },\r\n      { name: 'rinsutchi', type: 'dog' },\r\n      { name: 'sopratchi', type: 'chinchilla' },\r\n      { name: 'taiyaki', type: 'fish' },\r\n      { name: 'yumecantchi', type: 'sheep' },\r\n    ];\r\n    this.hungerTimer = setInterval(this.increaseHunger.bind(this), 25000);\r\n    this.happyTimer = setInterval(this.lowerHappiness.bind(this), 25000);\r\n    this.isAlive = true;\r\n    this.isPoopGone = false;\r\n    this.lastFeed = -1;\r\n    this.lastPlay = -1;\r\n  }\r\n  feedPet(): void {\r\n    const timer = performance.now();\r\n    const diff = Math.round((timer - this.lastFeed) / 1000);\r\n\r\n    if (this.happy === 0 || this.hungry === 10) {\r\n      clearInterval(this.hungerTimer);\r\n      this.isAlive = false;\r\n    }\r\n    if (this.lastFeed !== -1) {\r\n      if (\r\n        diff <= 10 &&\r\n        this.happy >= 0 &&\r\n        this.happy <= 10 &&\r\n        this.hungry < 10\r\n      ) {\r\n        this.happy--;\r\n        this.lastFeed = timer;\r\n      }\r\n    }\r\n    if (this.hungry > 0 && this.hungry < 10) {\r\n      this.hungry--;\r\n      this.lastFeed = timer;\r\n    }\r\n  }\r\n  playWithPet(): void {\r\n    const timer = performance.now();\r\n    const diff = Math.round((timer - this.lastPlay) / 1000);\r\n    if (this.happy === 0 || this.hungry === 10) {\r\n      clearInterval(this.hungerTimer);\r\n      this.isAlive = false;\r\n    }\r\n    if (this.lastPlay !== -1) {\r\n      if (\r\n        diff <= 10 &&\r\n        this.hungry <= 10 &&\r\n        this.hungry >= 0 &&\r\n        this.happy <= 10\r\n      ) {\r\n        this.hungry++;\r\n        this.lastPlay = timer;\r\n      }\r\n    }\r\n    if (this.happy > 0 && this.happy < 10) {\r\n      this.happy++;\r\n      this.lastPlay = timer;\r\n    }\r\n  }\r\n  reset(): void {\r\n    clearInterval(this.hungerTimer);\r\n    clearInterval(this.happyTimer);\r\n    this.isAlive = true;\r\n    location.reload();\r\n  }\r\n\r\n  private lowerHappiness(): void {\r\n    if (this.happy === 0) {\r\n      this.isAlive = false;\r\n      clearInterval(this.hungerTimer);\r\n      clearInterval(this.happyTimer);\r\n    } else {\r\n      this.happy--;\r\n    }\r\n  }\r\n  private increaseHunger(): void {\r\n    if (this.hungry === 10) {\r\n      this.isAlive = false;\r\n      clearInterval(this.hungerTimer);\r\n      clearInterval(this.happyTimer);\r\n    } else {\r\n      this.hungry++;\r\n    }\r\n  }\r\n  getHappiness(): number {\r\n    return this.happy;\r\n  }\r\n  getHunger(): number {\r\n    return this.hungry;\r\n  }\r\n  getPet(): Animal {\r\n    return this.type[Math.round(Math.random() * 12)];\r\n  }\r\n  isPetAlive(): boolean {\r\n    return this.isAlive;\r\n  }\r\n  lowerJoy(): void {\r\n    this.happy--;\r\n  }\r\n  isPoopgone(): boolean {\r\n    return this.isPoopGone;\r\n  }\r\n  setPoopBool(bool: boolean) {\r\n    this.isPoopGone = bool;\r\n  }\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jMyWs\")).toString();","import Tamagotchi from './Tamagotchi';\r\n\r\n((): void => {\r\n  const pet = new Tamagotchi();\r\n\r\n  const populateStats = (): void => {\r\n    const { name, type } = pet.getPet();\r\n    const setName = document.getElementById('name');\r\n    const setHappiness = document.getElementById('happiness');\r\n    const setHunger = document.getElementById('hunger');\r\n    const setTamaImage = document.getElementById('tamaimg');\r\n    const image: HTMLImageElement = document.createElement('img');\r\n    setName.innerHTML = `Name: ${name}<br /> Type: ${type} `;\r\n    const petURL = new URL(`./img/${name}.png`, import.meta.url);\r\n    console.log(petURL);\r\n    image.src = petURL.href;\r\n    image.setAttribute('alt', `${name}`);\r\n    setTamaImage.append(image);\r\n\r\n    const updateStats = (): void => {\r\n      if (pet.isPetAlive() === true) {\r\n        setHappiness.innerHTML = `Happiness: ${pet.getHappiness()}`;\r\n        setHunger.innerHTML = `Hunger: ${pet.getHunger()}`;\r\n      } else {\r\n        setHappiness.innerHTML = `Happiness: Dead`;\r\n        setHunger.innerHTML = `Hunger: Dead`;\r\n        image.src = new URL('./img/skull.png', import.meta.url).href;\r\n        image.setAttribute('alt', 'Dead');\r\n        clearInterval(refresh);\r\n      }\r\n    };\r\n    const refresh = setInterval(updateStats, 500);\r\n\r\n    const buttons = document.querySelectorAll('button');\r\n    let addPopImage: number;\r\n    buttons.forEach((button: HTMLButtonElement): void => {\r\n      button.addEventListener('click', (btn: Event): void => {\r\n        btn.preventDefault;\r\n\r\n        switch (button.value) {\r\n          case 'eat':\r\n            pet.feedPet();\r\n            addPopImage = setTimeout(addPoop, 1000);\r\n            break;\r\n          case 'play':\r\n            pet.playWithPet();\r\n            break;\r\n          case 'scoop':\r\n            scoopPoop();\r\n            break;\r\n          case 'restart':\r\n            pet.reset();\r\n            break;\r\n          default:\r\n            console.error('something went wrong');\r\n        }\r\n      });\r\n    });\r\n\r\n    const scoopPoop = (): void => {\r\n      pet.setPoopBool(true);\r\n    };\r\n\r\n    const addPoop = (): void => {\r\n      pet.setPoopBool(false);\r\n      const poopImage = document.querySelector('.poopimage');\r\n      poopImage.classList.toggle('hidden');\r\n\r\n      const addOne = (): void => {\r\n        const poopImage = document.querySelector('.poopimage');\r\n        if (pet.isPoopgone()) {\r\n          clearTimeout(add);\r\n          poopImage.classList.toggle('hidden');\r\n        } else {\r\n          pet.lowerJoy();\r\n\r\n          poopImage.classList.toggle('hidden');\r\n        }\r\n      };\r\n      const add = setTimeout(addOne, 3000);\r\n    };\r\n  };\r\n\r\n  populateStats();\r\n})();\r\n"],"names":["$4bc86ef3cb2403e5$export$6503ec6e8aabbaf","$4bc86ef3cb2403e5$export$f7ad0328861e2f03","$4bc86ef3cb2403e5$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$def29597bacd5816$export$2e2bcd8739ae039","this","happy","hungry","type","name","hungerTimer","setInterval","increaseHunger","bind","happyTimer","lowerHappiness","isAlive","isPoopGone","lastFeed","lastPlay","feedPet","timer","performance","now","diff","Math","round","clearInterval","playWithPet","reset","location","reload","getHappiness","getHunger","getPet","random","isPetAlive","lowerJoy","isPoopgone","setPoopBool","bool","$ba249fd8a770ec09$exports","URL","resolve","import","meta","url","toString","pet","setName","document","getElementById","setHappiness","setHunger","setTamaImage","image","createElement","innerHTML","petURL","console","log","src","href","setAttribute","append","refresh","addPopImage","querySelectorAll","forEach","button","addEventListener","btn","preventDefault","value","setTimeout","addPoop","scoopPoop","error","querySelector","classList","toggle","add","poopImage","clearTimeout","populateStats"],"version":3,"file":"index.4724a392.js.map"}